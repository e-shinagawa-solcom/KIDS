<?php

/**
*
*	@charset	: utf-8
*/



	//@------------------------------------------------------------------------
	/**
	*	概要	: Excelファイルパース処理
	*
	*
	*	解説	: アップロードされたExcelファイル（バイナリ）をパースする
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]		: [Object]	. ExcelParser Object（参照渡し）
	*	@param	[$aryData]	: [Array]	. $_REQUEST より取得した値
	*/
	//-------------------------------------------------------------------------
	function fncParseExcelFile( &$exc, $aryData )
	{
		// アプリケーションタイプのチェック
		if( strtolower($aryData['exc_type']) != APP_EXCEL_TYPE ) return false;

		// ファイル名空欄チェック
		if( empty($aryData['exc_name']) || is_null($aryData['exc_name']) ) return false;

		// テンポラリファイルの取得
		$excel_file	= FILE_UPLOAD_TMPDIR . $aryData["exc_tmp_name"];

		// パース処理モードの取得
		$exc_style = $aryData['style'];


		// パース処理
		switch( $exc_style )
		{
			// Excel バイナリ
			case 'segment':
				$time_start	= getmicrotime();
				$lngRes		= $exc->ParseFromFile( $excel_file );
				$time_end	= getmicrotime();
				break;

			default:
				break;
		}

		switch( $lngRes )
		{
			case 0:	break;
			case 1:	fatal( "Can't open file" );
			case 2:	fatal( "File too small to be an Excel file" );
			case 3:	fatal( "Error reading file header" );
			case 4:	fatal( "Error reading file" );
			case 5:	fatal( "This is not an Excel file or file stored in Excel < 5.0" );
			case 6:	fatal( "File corrupted" );
			case 7:	fatal( "No Excel data found in file" );
			case 8:	fatal( "Unsupported file version" );

			default:
				fatal( "Unknown error" );
		}


		return true;
	}



	//@------------------------------------------------------------------------
	/**
	*	概要	: 処理選択HTMLスクリプト返却
	*
	*
	*	解説	: 「選択・登録・修正・削除」各処理ボタンHTML生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$ws_num]	: [Integer]	. 選択したExcelワークシート番号
	*	@param	[$strMode]	: [String]	. ワークシート選択・確認画面判定文字列
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getHTMLFileConfirmScript( $ws_num, $strMode )
	{
		$aryHTML	=	array();
		$strHTML	= "";

		$aryHTML[]	= "\"</b>\n\n";
		$aryHTML[]	= "<div align=\"right\">\n";

		switch( $strMode )
		{
			// 選択画面
			case "select":
				$aryHTML[]	= "\t<button onclick=\"fncFileSelect( window." .FORM_NAME.", " .$ws_num. " ); return false;\"> 選択 </button>&nbsp;\n";
				$aryHTML[]	= "\t<button onclick=\"window.close();\"> 閉じる </button>&nbsp;&nbsp;&nbsp;\n";
				$aryHTML[]	= "\t<a id=\"excHref\" href=\"#top\">↑Page Top</a>&nbsp;&nbsp;\n";
				break;

			// 確認画面
			case "confirm":
				$aryHTML[]	= "\t<button onclick=\"fncFileProcess( window." .FORM_NAME. ", 'confirm' ); return false;\"> 登録 </button>&nbsp;\n";
				$aryHTML[]	= "\t<button onclick=\"fncFileProcess( window." .FORM_NAME. ", 'input' ); return false;\"> 入力 </button>&nbsp;\n";
				$aryHTML[]	= "\t<button onclick=\"window.close();\"> 閉じる </button>&nbsp;&nbsp;\n";
				break;

			default:
				break;
		}

		$aryHTML[]	= "</div>\n\n\n";


		$strHTML	= implode( "", $aryHTML );

		unset( $aryHTML );
		return $strHTML;
	}



	//@------------------------------------------------------------------------
	/**
	*	概要	: フォーム要素返却
	*
	*
	*	解説	: 各ワークシート選択用フォームオブジェクトを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]		: [Object]	. ExcelParser Object
	*	@param	[$ws_num]	: [Integer]	. 選択したExcelワークシート番号
	*	@param	[$aryData]	: [Array]	. $_REQUEST より取得した値
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getForm( $exc, $ws_num, $aryData )
	{
		$aryHTML	= array();
		$strHTML	= "";

		$aryHTML[]	= getHiddenCommon( $ws_num, $aryData );	// 共通HIDDEN要素取得
		$strHTML	= implode( "", $aryHTML );


		unset( $aryHTML );
		return $strHTML;
	}



	//@------------------------------------------------------------------------
	/**
	*	概要	: 共通HIDDEN要素返却
	*
	*
	*	解説	: 各ワークシート毎にHIDDENオブジェクトを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$ws_num]	: [Integer]	. 選択したExcelワークシート番号
	*	@param	[$aryData]	: [Array]	. $_REQUEST より取得した値
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getHiddenCommon( $ws_num, $aryData )
	{
		$aryHTML	= array();
		$strHTML	= "";

		$aryHTML[]	= "\t<input type=\"hidden\" name=\"ActionScriptName\"		value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"strSessionID\"			value=\"" .$aryData["strSessionID"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"lngFunctionCode\"		value=\"" .$aryData["lngFunctionCode"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"ESFlg\"					value=\"1\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"lngEstimateNo\"			value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"strProcess\"				value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"strPageCondition\"		value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"strActionName\"			value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"lngRegistConfirm\"		value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"strMode\"				value=\"\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"RENEW\"					value=\"\" />\n\n";

		$aryHTML[]	= "\t<input type=\"hidden\" name=\"lngSelectSheetNo\"	value=\"" .$ws_num. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"style\"				value=\"" .$aryData["style"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"exc_name\"			value=\"" .$aryData["exc_name"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"exc_type\"			value=\"" .$aryData["exc_type"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"exc_tmp_name\"		value=\"" .$aryData["exc_tmp_name"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"exc_error\"			value=\"" .$aryData["exc_error"]. "\" />\n";
		$aryHTML[]	= "\t<input type=\"hidden\" name=\"exc_size\"			value=\"" .$aryData["exc_size"]. "\" />\n";

		$strHTML	= implode( "", $aryHTML );


		unset( $aryHTML );
		return $strHTML;
	}



	//@------------------------------------------------------------------------
	/**
	*	概要	: ワークシートHIDDEN要素返却
	*
	*
	*	解説	: 各ワークシート毎にHIDDENオブジェクトを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$objMap]	: [Object]	. Mapping Object
	*	@param	[$ary]		: [Array]	. name/value配列
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getHiddenWorkSheet( $objMap, $ary )
	{
		$strHTML		= "";
		$aryBuff		= array();
		$aryBuff		= $objMap->getArrayUnion();			// 共有配列
		$strProc		= $objMap->getProcessMode();		// 処理モード
		$strRowCol		= $aryBuff[ROW] . $aryBuff[COL];	// 行/列


		switch( $strProc )
		{
			// 通常
			case PROC_NORMAL:

				$strHTML	= "\t<input type=\"hidden\" name=\"" .$ary["name"]. "\" value=\"" .$ary["value"]. "\" />\n";


				// 行/列が終端列の場合
				if( $strRowCol == ROWCOL_LAST_HEADER )
				{
					// [追加]ヘッダーHIDDENを取得
					$strHTML	.= getAddHiddenWorkSheet( $objMap, $aryBuff );
				}
				break;


			// 明細行
			case PROC_DETAIL:

				// 列が計画個数の場合
				if( $aryBuff[COL] == COL_PRODUCT_QUANTITY )
				{
					// 値が空欄の場合、生産予定数を設定
					$ary["value"]	= ( is_null($ary["value"]) || empty($ary["value"]) ) ? $aryBuff[NAME_PRODUCTION_QUANTITY_HIDDEN] : $ary["value"];
				}

				$strHTML	= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .$ary["name"]. "]\" value=\"" .$ary["value"]. "\" />\n";

				// 列が終端列の場合
				if( $aryBuff[COL] == COL_LAST_DETAIL )
				{
					// [追加]明細行HIDDENを取得
					$strHTML	.= getAddDetailHiddenWorkSheet( $objMap, $aryBuff );
				}
				break;


			// 小計・合計他
			case PROC_JUMP:

				$strHTML	= "\t<input type=\"hidden\" name=\"" .$ary["name"]. "\" value=\"" .$ary["value"]. "\" />\n";
				break;


			default:
				break;
		}


		unset( $strRowCol, $strProc );
		return $strHTML;
	}

	//@------------------------------------------------------------------------
	/**
	*	概要	: [追加]ワークシートヘッダーHIDDEN要素返却
	*
	*
	*	解説	: 各ワークシートCell上に無いHIDDENオブジェクトを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$objMap]	: [Object]	. Mapping Object
	*	@param	[$aryBuff]	: [Array]	. 共有配列
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getAddHiddenWorkSheet( $objMap, $aryBuff )
	{
		$strHTML	= "";

		// 担当者名称
		$strHTML	.= "\t<input type=\"hidden\" name=\"" .NAME_USER_DISPLAY_NAME. "\" value=\"" .$aryBuff[NAME_USER_DISPLAY_NAME]. "\" />\n";

		// 生産予定数補完
		$strHTML	.= "\t<input type=\"hidden\" name=\"" .NAME_PRODUCTION_QUANTITY_HIDDEN. "\" value=\"" .$aryBuff[NAME_PRODUCTION_QUANTITY_HIDDEN]. "\" />\n";

		// 納価補完
		$strHTML	.= "\t<input type=\"hidden\" name=\"" .NAME_PRODUCT_PRICE_HIDDEN. "\" value=\"" .$aryBuff[NAME_PRODUCT_PRICE_HIDDEN]. "\" />\n\n";


		unset( $aryBuff );
		return $strHTML;
	}

	//@------------------------------------------------------------------------
	/**
	*	概要	: [追加]ワークシート明細行HIDDEN要素返却
	*
	*
	*	解説	: 各ワークシートCell上に無いHIDDENオブジェクトを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$objMap]	: [Object]	. Mapping Object
	*	@param	[$aryBuff]	: [Array]	. 共有配列
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getAddDetailHiddenWorkSheet( $objMap, $aryBuff )
	{
		$strHTML	= "";

		$lngConvRate	= $objMap->getConversionRate();		// 通貨コードによる換算レート
		$lngSubTotalJP	= $objMap->getSubTotalPriceJP();	// 日本円計画原価小計


		// 計画率判定フラグの変換
		$blnVal	= ( $aryBuff[NAME_PERCENT_INPUT_FLAG] ) ? CONV_BOOL_T : CONV_BOOL_F;


		// %入力フラグ
		$strHTML	.= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .NAME_PERCENT_INPUT_FLAG. "]\" value=\"" .$blnVal. "\" />\n";

		// 計画率
		$strHTML	.= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .NAME_PRODUCT_RATE. "]\" value=\"" .$aryBuff[NAME_PRODUCT_RATE]. "\" />\n";

		// 換算レート
		$strHTML	.= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .NAME_CONVERSION_RATE. "]\" value=\"" .$lngConvRate. "\" />\n";

		// 日本円計画原価小計
		$strHTML	.= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .NAME_SUBTOTAL_PRICE_JP. "]\" value=\"" .$lngSubTotalJP. "\" />\n";

		// 仕入先名称
		$strHTML	.= "\t\t<input type=\"hidden\" name=\"" .DETAIL_HASH. "[" .$aryBuff[PROC_STOCK]. "][" .$aryBuff[NAME_DETAIL_ROW]. "][" .NAME_COMPANY_DISPLAY_NAME. "]\" value=\"" .$aryBuff[NAME_COMPANY_DISPLAY_NAME]. "\" />\n\n";


		return $strHTML;
	}



	//@------------------------------------------------------------------------
	/**
	*	概要	: 仕入科目HIDDEN配列キー返却
	*
	*
	*	解説	: 仕入科目のHIDDEN用配列キーを生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$objMap]	: [Object]	. Mapping Object
	*	@param	[$data]		: [Object]	. ワークシートデータ
	*
	*	@return	[$lngKey]	: [Integer]
	*/
	//-------------------------------------------------------------------------
	function getStockKey( $objMap, $data )
	{
		$lngKey		= 0;
		$aryBuff	= array();

		// マッピング配列の取得
		$aryBuff	= $objMap->getArrayMap();

		$lngKey		= $aryBuff[PROC_STOCK][$data];

		unset( $aryBuff );
		return $lngKey;
	}


	//@------------------------------------------------------------------------
	/**
	*	概要	: 処理モード設定
	*
	*
	*	解説	: マッピング処理が通常、明細のどちらに該当するのかを設定
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$objMap]	: [Object]	. Mapping Object（参照渡し）
	*	@param	[$data]		: [Object]	. ワークシートデータ
	*	@param	[$col]		: [String]	. ワークシート列文字列
	*
	*/
	//-------------------------------------------------------------------------
	function setProcessMode( &$objMap, $data, $col )
	{
		$aryMap			= array();
		$aryBuff		= array();
		$aryMap			= &$objMap->getArrayMap();		// マッピング配列（参照渡し）
		$aryBuff		= &$objMap->getArrayUnion();	// 共有配列（参照渡し）
		$strProc		= $objMap->getProcessMode();	// 処理モード


		switch( $strProc )
		{
			// 通常
			case PROC_NORMAL:
				// データが「明細行（仕入科目）」かどうか判定
				if( $objMap->fncCheckDetail( $data, PROC_STOCK ) )
				{
					// 処理モード設定：明細行
					$objMap->setProcessMode( PROC_DETAIL );


					// 仕入科目HIDDEN配列キー設定
					$objMap->setArrayUnion( PROC_STOCK, getStockKey($objMap, $data) );

					// 仕入科目名（キー名称）設定
					$objMap->setArrayUnion( NAME_STOCK_KEYNAME, $data );

					// 明細行番号のカウント設定
					$objMap->setArrayUnion( NAME_DETAIL_ROW, $aryMap[PROC_COUNT][$aryBuff[NAME_STOCK_KEYNAME]] );
				}


				// ジャンプフラグが無効の場合
				if( !$aryBuff[NAME_JUMP_FLAG] )
				{
					// 小計・合計他かどうか判定
					if( $objMap->fncCheckJump( $data, PROC_JUMP ) )
					{
						// 処理モード設定：小計・合計他
						$objMap->setProcessMode( PROC_JUMP );
					}
				}
				break;

			// 明細行
			case PROC_DETAIL:
				// 明細行処理が処理終了列に達した場合
				if( $objMap->fncCheckFinishDetail( $col ) )
				{
					// 明細行番号のカウント設定
					$objMap->setArrayUnion( NAME_DETAIL_ROW, $aryMap[PROC_COUNT][$aryBuff[NAME_STOCK_KEYNAME]]++ );


					// 処理モード設定：通常
					$objMap->setProcessMode( PROC_NORMAL );
				}
				break;

			// 小計・合計他
			case PROC_JUMP:
				// ジャンプフラグが無効の場合
				if( !$aryBuff[NAME_JUMP_FLAG] )
				{
					// 処理モード設定：通常
					$objMap->setProcessMode( PROC_NORMAL );
				}
				break;

			default:
				break;
		}

		unset( $aryMap, $aryBuff, $strProc );
		return true;
	}





	//@------------------------------------------------------------------------
	/**
	*	概要	: Excelワークシート名HTML返却
	*
	*
	*	解説	: ワークシート名一覧表示 <option> HTML生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]		: [Object]	. ExcelParser Object
	*	@param	[$ws_num]	: [Integer]	. 選択したExcelワークシート番号
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getHTMLWorkSheetName( $exc, $ws_num )
	{
		$strHTML	= "";

		if( $exc->worksheet['unicode'][$ws_num] )
		{
			$strHTML .= "\t<option value=\"" .$ws_num. "\">" . uc2html($exc->worksheet['name'][$ws_num]) . "</option>\n";
		}
		else
		{
			$strHTML .= "\t<option value=\"" .$ws_num. "\">" . $exc->worksheet['name'][$ws_num] . "</option>\n";
		}

		return $strHTML;
	}





	//@------------------------------------------------------------------------
	/**
	*	概要	: ExcelワークシートデータHTML返却
	*
	*
	*	解説	: ワークシートデータ表示 <table> HTML生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]		: [Object]	. ExcelParser Object
	*	@param	[$objMap]	: [Object]	. Excel Mapping Object
	*	@param	[$ws_num]	: [Integer]	. 選択したExcelワークシート番号
	*	@param	[$strMode]	: [String]	. ワークシート選択・確認画面判定文字列
	*
	*	@return	[$strHTML]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getHTMLWorkSheetData( $exc, $ws_num, $strMode )
	{
		$strHTML	= "";
		$blnEOF		= false;	// パース終了フラグ
		$strBuffCol	= "";		// 列文字列バッファ


		// ワークシート名取得
		$strHTML	.= "<a name=\"" .$ws_num. "\"></a>";
		$strHTML	.= "<br />\n";
		$strHTML	.= "&nbsp;&nbsp;<b>Worksheet: \"";

		if( $exc->worksheet['unicode'][$ws_num] )
		{
			$strHTML	.= uc2html($exc->worksheet['name'][$ws_num]);
		}
		else
		{
			$strHTML	.= $exc->worksheet['name'][$ws_num];
		}

		// ファイル選択HTMLスクリプト
		$strHTML	.= getHTMLFileConfirmScript( $ws_num, $strMode );


		$ws	= $exc->worksheet['data'][$ws_num];


		// データ取得開始
		if( is_array($ws) && isset($ws['max_row']) && isset($ws['max_col']) )
		{
			$strHTML	.= "\n<br /><br />\n\n\n\n";

			$strHTML	.= "<table border=\"1\" cellspacing=\"0\" cellpadding=\"2\">\n";
			$strHTML	.= "\t<tr>\n";
			$strHTML	.= "\t\t<td class=\"column\">&nbsp;</td>\n";

			// 列文字列取得
			for( $j=0; $j<=$ws['max_col']; $j++ )
			{
				$strHTML	.= "\t\t<td class=\"column\">";
/*
				// 列文字列取得
				if( $j>25 ) $strBuffCol = chr((int)($j/26)+64);
				$strBuffCol = chr(($j % 26) + 65);

				$strHTML	.= $strBuffCol;
				$strHTML	.= "</td>\n";
*/
				if( $j>25 ) $strHTML	.= chr( (int)($j/26)+64 );
				$strHTML	.= chr(($j % 26) + 65)."</td>\n";
			}

			for( $i=0; $i<=$ws['max_row']; $i++ )
			{
				$strHTML	.= "\t<tr>\n";

				// 行番号取得
				$strHTML	.= "\t\t<td class=\"column\">".($i+1)."</td>\n";

				if( isset($ws['cell'][$i]) && is_array($ws['cell'][$i]) )
				{
					for( $j=0; $j<=$ws['max_col']; $j++ )
					{
						// 列文字列取得
						if( $j>25 ) $strBuffCol = chr((int)($j/26)+64);
						$strBuffCol = chr(($j % 26) + 65);


						if( ( is_array($ws['cell'][$i]) ) && ( isset($ws['cell'][$i][$j]) ) )
						{
							$strHTML .= "\t\t<td>";
							$data = $ws['cell'][$i][$j];

							switch ($data['type'])
							{
								// string
								case 0:
									$ind	= $data['data'];

									if( $exc->sst['unicode'][$ind] )
									{
										$s	= uc2html($exc->sst['data'][$ind]);
									}
									else
									{
										$s	= $exc->sst['data'][$ind];
									}

									if( strlen(trim($s)) == 0 )
									{
										//print "&nbsp;";
									}
									else
									{
										// 終了キー判定
										if( fncCheckEOFKey( $s ) )
										{
											$blnEOF	= true;
										}
										else
										{
											$strHTML	.= $s;
										}
									}
									break;

								// integer number
								case 1:

								// float number
								case 2:
									//echo $data['data'];

								// date
								case 3:
									//$ret = $data[data];
									//str_replace ( " 00:00:00", "", gmdate("d-m-Y H:i:s",$exc->xls2tstamp($data[data])) );

								case 4: //string
/*
									// 終了キー判定
									if( fncCheckEOFKey( $data['data'] ) )
									{
										$blnEOF	= true;
									}
									else
									{
										$strHTML	.= $data['data'];
									}
*/

									$strHTML	.= $data['data'];
									break;

								case 5: //hlink
									$strHTML	.= "<a href=\"";
									$strHTML	.= uc2html($data['hlink']);
									$strHTML	.= "\">";
									$strHTML	.= uc2html($data['data']);
									$strHTML	.= "</a>";
									break;

								default:
									//print "&nbsp;";
									break;
							}


							$strHTML	.= "</td>\n";
						}
						else
						{
							$strHTML	.= "\t\t<td></td>\n";
						}
					}
					// end for loop
				}
				else
				{
					// print an empty row
					for( $j=0; $j<=$ws['max_col']; $j++ )
					{
						$strHTML	.= "\t\t<td></td>\n";
					}

					$strHTML	.= "\n";
				}


				// パース終了判定が有効で且つ終了列の場合、Break
				if( fncCheckFinish( $blnEOF, $strBuffCol ) )
				{
					$strHTML	.= "\t</tr>\n";
					break;
				}
				else
				{
					$strHTML	.= "\t</tr>\n";
				}
			}
			// end for loop

			$strHTML .= "</table>\n\n\n<br>\n";
		}
		else
		{
			// emtpty worksheet
			$strHTML	.= "<b> - empty</b><br>\n";
		}

		$strHTML	.= "\n\n\n<hr size=1><br>\n";


		return $strHTML;
	}





	//@------------------------------------------------------------------------
	/**
	*	概要	: 製品マスタ情報返却
	*
	*
	*	解説	: ワークシートデータ上、製品マスタ情報返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]			: [Object]	. ExcelParser Object
	*	@param	[$objMap]		: [Object]	. Excel Mapping Object
	*	@param	[$ws_num]		: [Integer]	. 選択したExcelワークシート番号
	*
	*	@return	[$aryRetVal]	: [Array]
	*/
	//-------------------------------------------------------------------------
	function getProductHeaderData( $exc, $objMap, $objDB, $ws_num )
	{
		$strHTML	= "";
		$strBuffCol	= "";			// 列文字列バッファ
		$lngBuffRow	= 0;			// 行番号バッファ

		$aryData	= array();		// データ配列
		$aryRetVal	= array();		// マッピング結果配列バッファ

		// 処理モード設定：差分
		$objMap->setProcessMode( PROC_DIFF );


		$ws = $exc->worksheet['data'][$ws_num];

		if( is_array($ws) && isset($ws['max_row']) && isset($ws['max_col']) )
		{
			for( $i=0; $i<=$ws['max_row']; $i++ )
			{
				// 行番号取得
				$lngBuffRow = ($i+1);


				if( isset($ws['cell'][$i]) && is_array($ws['cell'][$i]) )
				{
					for( $j=0; $j<=$ws['max_col']; $j++ )
					{
						// 列文字列取得
						if( $j>25 ) $strBuffCol = chr((int)($j/26)+64);
						$strBuffCol = chr(($j % 26) + 65);


						if( ( is_array($ws['cell'][$i]) ) && ( isset($ws['cell'][$i][$j]) ) )
						{
							$data = $ws['cell'][$i][$j];



							switch( $data['type'] )
							{
								// string
								case 0:
									$ind = $data['data'];

									if( $exc->sst['unicode'][$ind] )
									{
										$s = uc2html($exc->sst['data'][$ind]);
									}
									else
									{
										$s = $exc->sst['data'][$ind];
									}

									if( strlen(trim($s))==0 )
									{
										//print "&nbsp;";
									}
									else
									{
										if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, $s ) )
										{
											$aryData[strtolower($aryRetVal["name"])]	= $aryRetVal["value"];
										}
									}
									break;

								// integer number
								case 1:

								// float number
								case 2:
									//echo '<input type="hidden" name="' .$data['data']. '" value="' .$data['data']. '" />';
									//echo $data['data'];

								// date
								case 3:
									//$ret = $data[data];
									//str_replace ( " 00:00:00", "", gmdate("d-m-Y H:i:s",$exc->xls2tstamp($data[data])) );

								case 4: //string
									if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, $data['data'] ) )
									{
										$aryData[strtolower($aryRetVal["name"])]	= $aryRetVal["value"];
									}
									break;

								case 5: //hlink
//									$strHTML	.= $objMap->getMappingData( $lngBuffRow, $strBuffCol, uc2html($data['hlink']), "common" );

//									$strHTML	.= $objMap->getMappingData( $lngBuffRow, $strBuffCol, uc2html($data['data']), "common" );
									break;

								default:
									//print "&nbsp;";
									break;
							}

						}
						else
						{
							// 処理モード設定
							if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, "" ) )
							{
								$aryData[strtolower($aryRetVal["name"])]	= $aryRetVal["value"];
							}
						}
					}
					// end for loop

				}

			}
			// end for loop
		}


		unset( $strBuffCol, $lngBuffRow, $aryRetVal );
		return $aryData;
	}





	//@------------------------------------------------------------------------
	/**
	*	概要	: ExcelワークシートデータFORM返却
	*
	*
	*	解説	: ワークシートデータ表示 <input type="hidden"> 生成、返却
	*
	*	対象	: 結果用テンプレート
	*
	*	@param	[$exc]			: [Object]	. ExcelParser Object
	*	@param	[$objMap]		: [Object]	. Excel Mapping Object
	*	@param	[$ws_num]		: [Integer]	. 選択したExcelワークシート番号
	*	@param	[$aryData]		: [Array]	. $_REQUEST より取得した値
	*
	*	@return	[$strHidden]	: [String]
	*/
	//-------------------------------------------------------------------------
	function getFORMWorkSheetData( $exc, $objMap, $ws_num, $aryData )
	{
		$strHTML		= "";
		$strBuffCol		= "";			// 列文字列バッファ
		$lngBuffRow		= 0;			// 行番号バッファ

		$strBuffWSName	= "";			// ワークシート名称バッファ

		$aryRetVal		= array();		// マッピング結果配列バッファ


		// ワークシート名取得
		if( $exc->worksheet['unicode'][$ws_num] )
		{
			$strBuffWSName = uc2html($exc->worksheet['name'][$ws_num]);
		}
		else
		{
			$strBuffWSName = $exc->worksheet['name'][$ws_num];
		}


		$ws = $exc->worksheet['data'][$ws_num];

		if( is_array($ws) && isset($ws['max_row']) && isset($ws['max_col']) )
		{
			$strHTML	.= "\t<!-- " .$strBuffWSName. " -->\n";


			// 共通HIDDEN要素取得
			$strHTML	.= getHiddenCommon( $ws_num, $aryData ) . "\n";

			$strHTML	.= "\t<input type=\"hidden\" name=\"strWorkSheetName\" value=\"" .$strBuffWSName. "\" />\n";


			for( $i=0; $i<=$ws['max_row']; $i++ )
			{
				// 行番号取得
				$lngBuffRow = ($i+1);


				if( isset($ws['cell'][$i]) && is_array($ws['cell'][$i]) )
				{
					for( $j=0; $j<=$ws['max_col']; $j++ )
					{
						// 列文字列取得
						if( $j>25 ) $strBuffCol = chr((int)($j/26)+64);
						$strBuffCol = chr(($j % 26) + 65);


						if( ( is_array($ws['cell'][$i]) ) && ( isset($ws['cell'][$i][$j]) ) )
						{
							$data = $ws['cell'][$i][$j];



							switch( $data['type'] )
							{
								// string
								case 0:
									$ind = $data['data'];

									if( $exc->sst['unicode'][$ind] )
									{
										$s = uc2html($exc->sst['data'][$ind]);
									}
									else
									{
										$s = $exc->sst['data'][$ind];
									}

									if( strlen(trim($s))==0 )
									{
										//print "&nbsp;";
									}
									else
									{
										// 処理モード設定
										setProcessMode( $objMap, $s, $strBuffCol );

										if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, $s ) )
										{
											$strHTML	.= getHiddenWorkSheet( $objMap, $aryRetVal );
										}
									}
									break;

								// integer number
								case 1:

								// float number
								case 2:
									//echo '<input type="hidden" name="' .$data['data']. '" value="' .$data['data']. '" />';
									//echo $data['data'];

								// date
								case 3:
									//$ret = $data[data];
									//str_replace ( " 00:00:00", "", gmdate("d-m-Y H:i:s",$exc->xls2tstamp($data[data])) );

								case 4: //string
									// 処理モード設定
									setProcessMode( $objMap, $data['data'], $strBuffCol );

									if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, $data['data'] ) )
									{
										$strHTML	.= getHiddenWorkSheet( $objMap, $aryRetVal );
									}
									break;

								case 5: //hlink
//									$strHTML	.= $objMap->getMappingData( $lngBuffRow, $strBuffCol, uc2html($data['hlink']), "common" );

//									$strHTML	.= $objMap->getMappingData( $lngBuffRow, $strBuffCol, uc2html($data['data']), "common" );
									break;

								default:
									//print "&nbsp;";
									break;
							}

						}
						else
						{
							// 処理モード設定
							setProcessMode( $objMap, "", $strBuffCol );

							if( $aryRetVal = $objMap->getMappingData( $lngBuffRow, $strBuffCol, "" ) )
							{
								$strHTML	.= getHiddenWorkSheet( $objMap, $aryRetVal );
							}
						}
					}
					// end for loop
				}
				else
				{
					// print an empty row
					//for( $j=0; $j<=$ws['max_col']; $j++ )
					//{
						//print "<td></td>";
					//}
				}

			}
			// end for loop
		}
		else
		{
			// emtpty worksheet
			//print "<b> - empty</b><br>\n";
		}


		unset( $strBuffCol, $lngBuffRow, $strBuffWSName );
		return $strHTML;
	}


	// 終了キー判定
	function fncCheckEOFKey( $data )
	{
		if( $data != PARSE_EOF ) return false;

		return true;
	}
	// パース終了判定が有効で且つ終了列の場合
	function fncCheckFinish( $blnEOF, $col )
	{
		if( !$blnEOF && ($col != COL_EOF) ) return false;

		return true;
	}

?>
